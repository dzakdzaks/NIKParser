# Workflow name
name: Release App

# When it will be triggered
on:
  push:
    branches:
      - main

# Where it will run
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Fetch Sources
        uses: actions/checkout@v2
        with:
          # Number of commits to fetch. 0 indicates all history for all branches and tags.
          fetch-depth: 0

      - name: Setup JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2
      # Cache Gradle dependencies and Gradle Wrapper
      - name: Setup Gradle Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-${{ hashFiles('**/*.gradle*') }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}-${{ hashFiles('**/buildSrc/**/*.kt') }}

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Generate App Version Name
          run: echo "VERSION_NAME=$(git describe --tags | sed 's/\(.*\)-/\1./' | sed 's/\(.*\)-/\1+/')" >> $GITHUB_ENV

      - name: Bump Version
        uses: chkfung/android-version-actions@v1.1
        with:
          gradlePath: app/build.gradle.kts
          versionCode: ${{ github.run_number }}
          versionName: ${{ env.VERSION_NAME }}

      - name: Run Linters and Test
        run: ./gradlew check

      - name: Upload Reports
        uses: actions/upload-artifact@v2
        with:
          name: Test-Reports
          path: app/build/reports
        if: always()

      - name: Restore playstore.keystore.jks
        run: echo $KEYSTORE_FILE | base64 -d > upload-keystore.jks

      - name: Build Release AAB
        run: ./gradlew
          -PKEYSTORE_FILE="../${{ upload-keystore.jks }}"
          -PKEYSTORE_PASSWORD=${{ secrets.KEYSTORE_PASSWORD }}
          -PSIGNING_KEY_ALIAS=${{ secrets.SIGNING_KEY_ALIAS }}
          -PSIGNING_KEY_PASSWORD=${{ secrets.SIGNING_KEY_PASSWORD }}
          app:bundleRelease

      - name: Deploy to Play Store
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.SERVICE_ACCOUNT_JSON }}
          packageName: your.app.package
          releaseFiles: app/build/outputs/bundle/release/*.aab
          track: internal
